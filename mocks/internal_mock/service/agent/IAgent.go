// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	model "github.com/wejick/alive/internal/model"
)

// IAgent is an autogenerated mock type for the IAgent type
type IAgent struct {
	mock.Mock
}

// AddAgent provides a mock function with given fields: _a0
func (_m *IAgent) AddAgent(_a0 model.Agent) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(model.Agent) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetAgents provides a mock function with given fields: _a0
func (_m *IAgent) GetAgents(_a0 []string) []model.Agent {
	ret := _m.Called(_a0)

	var r0 []model.Agent
	if rf, ok := ret.Get(0).(func([]string) []model.Agent); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]model.Agent)
		}
	}

	return r0
}

// Ping provides a mock function with given fields: _a0
func (_m *IAgent) Ping(_a0 string) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UpdateHealthStatus provides a mock function with given fields:
func (_m *IAgent) UpdateHealthStatus() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewIAgent interface {
	mock.TestingT
	Cleanup(func())
}

// NewIAgent creates a new instance of IAgent. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIAgent(t mockConstructorTestingTNewIAgent) *IAgent {
	mock := &IAgent{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
